<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta http-equiv="Content-Language" content="auto" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Username Generator | Calculator2U</title>
<meta name="description" content="Generate creative and unique usernames with our free tool. Customize your preferences and get instant suggestions." />
<meta name="keywords" content="username generator, create username, unique username, generate username, username ideas" />
<meta name="author" content="Calculator2U" />
<link rel="canonical" href="https://www.calculator2u.com/en/generator/username-generator.html" />
<meta property="og:title" content="Username Generator | Calculator2U" />
<meta property="og:description" content="Generate creative and unique usernames with our free tool. Customize your preferences and get instant suggestions." />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://www.calculator2u.com/en/generator/username-generator.html" />
<meta property="og:image" content="https://www.calculator2u.com/assets/images/username-generator.jpg" />
<meta property="og:locale" content="en_US" />
<meta property="og:site_name" content="Calculator2U" />

<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-RLH4FLZBZF"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-RLH4FLZBZF');
</script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<style>
  /* All existing styles from your date calculator */
  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }

  body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    margin: 0;
    background: #f9f9f9;
    color: #333;
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    background: linear-gradient(135deg, #f0f9ff 0%, #e6f7ff 100%);
  }
  html, body {
    overflow-x: hidden;
  }

  /* Header & Navigation */
  header {
    background-color: #006d77;
    position: sticky;
    top: 0;
    z-index: 100;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }

  .navbar {
    padding: 1rem 2rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
  }

  .navbar .logo {
    color: #fff;
    font-size: 1.5rem;
    text-decoration: none;
    font-weight: bold;
    display: flex;
    align-items: center;
  }

  .logo-icon {
    margin-right: 10px;
    font-size: 1.8rem;
  }

  .nav-links {
    list-style: none;
    display: flex;
    flex-wrap: wrap;
    gap: 1.5rem;
    padding-left: 0;
    margin: 0;
    align-items: center;
    transition: all 0.4s ease;
  }

  .nav-links a {
    color: #fff;
    text-decoration: none;
    transition: color 0.3s;
    font-weight: 500;
    padding: 0.5rem 0.8rem;
    border-radius: 4px;
  }

  .nav-links a:hover,
  .nav-links a.active {
    background-color: rgba(255, 255, 255, 0.15);
  }

  /* Language selector styles */
  .lang-selector {
    position: relative;
    display: inline-block;
    min-width: 140px;
  }
  
  .lang-select {
    background: transparent;
    border: 1.5px solid #fff;
    color: #fff;
    padding: 0.3rem 1.8rem 0.3rem 0.8rem;
    border-radius: 4px;
    cursor: pointer;
    font-weight: 600;
    font-size: 0.9rem;
    outline: none;
    width: 100%;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='white' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: right 0.7rem center;
    background-size: 1rem;
  }
  
  .lang-select option {
    background-color: #006d77;
    color: #fff;
  }

  .hamburger {
    display: none;
    flex-direction: column;
    justify-content: space-around;
    width: 2rem;
    height: 2rem;
    background: transparent;
    border: none;
    cursor: pointer;
    padding: 0;
    z-index: 10;
  }

  .hamburger:focus {
    outline: none;
  }

  .hamburger div {
    width: 2rem;
    height: 0.25rem;
    background: #fff;
    border-radius: 10px;
    transition: all 0.3s linear;
    position: relative;
    transform-origin: 1px;
  }

  /* Hero Section */
  .hero {
    background: linear-gradient(135deg, #006d77 0%, #008891 100%);
    color: white;
    text-align: center;
    padding: 4rem 1rem;
    margin-bottom: 3rem;
  }

  .hero h1 {
    font-size: 2.8rem;
    margin-bottom: 1rem;
    color: #fff;
  }

  .hero p {
    font-size: 1.2rem;
    max-width: 800px;
    margin: 0 auto 1.5rem;
    color: rgba(255, 255, 255, 0.9);
  }

  /* Main Content */
  .container {
    max-width: 1200px;
    width: 100%;
    margin: 0 auto 3rem;
    padding: 0 1.5rem;
    text-align: center;
    flex: 1;
  }

  .section-title {
    text-align: center;
    margin-bottom: 2.5rem;
    color: #006d77;
    position: relative;
    padding-bottom: 1rem;
  }

  .section-title::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 4px;
    background-color: #ffd166;
    border-radius: 2px;
  }

  /* Generator Styles */
  .generator-container {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
    max-width: 1200px;
    width: 100%;
    margin: 0 auto;
    padding: 0 1.5rem;
  }
  
  @media (min-width: 992px) {
    .generator-container {
      grid-template-columns: 1fr 1fr;
    }
  }
  
  .card {
    background: white;
    border-radius: 12px;
    padding: 2rem;
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
  }
  
  .input-group {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1.2rem;
    margin-bottom: 1.5rem;
  }
  
  @media (min-width: 576px) {
    .input-group {
      grid-template-columns: 1fr 1fr;
    }
  }

  .input-field {
    display: flex;
    flex-direction: column;
  }
 
  .input-field input,
  .input-field select,
  .input-field textarea {
    flex-wrap: wrap;
    max-width: 100%;
    width: 100%;
    box-sizing: border-box;
  }

  .input-field label {
    margin-bottom: 0.5rem;
    font-weight: 500;
    color: #006d77;
    display: flex;
    align-items: center;
  }
  
  .info-icon {
    margin-left: 0.5rem;
    color: #4db5bd;
    cursor: help;
    font-size: 0.9rem;
  }
  
  .input-field input,
  .input-field textarea,
  .input-field select {
    padding: 0.8rem 1rem;
    border: 2px solid #e0f7fa;
    border-radius: 8px;
    font-size: 1.1rem;
    transition: border-color 0.3s;
  }
  
  .input-field input:focus,
  .input-field textarea:focus,
  .input-field select:focus {
    outline: none;
    border-color: #4db5bd;
    box-shadow: 0 0 0 3px rgba(77, 181, 189, 0.2);
  }
  
  .action-btn {
    background: #ffd166;
    color: #333;
    border: none;
    padding: 1rem 2rem;
    font-size: 1.1rem;
    font-weight: 600;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s;
    display: block;
    width: 100%;
    margin-top: 1rem;
  }
  
  .action-btn:hover {
    background: #ffc043;
    transform: translateY(-2px);
    box-shadow: 0 5px 10px rgba(0,0,0,0.1);
  }
  
  /* Footer */
  footer {
    background-color: #006d77;
    color: #fff;
    padding: 3rem 1rem;
    margin-top: auto;
  }

  .footer-container {
    max-width: 1200px;
    width: 100%;
    margin: 0 auto;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 2rem;
  }

  .footer-column h3 {
    font-size: 1.3rem;
    margin-bottom: 1.2rem;
    position: relative;
    padding-bottom: 0.5rem;
  }

  .footer-column h3::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 50px;
    height: 2px;
    background-color: #4db5bd;
  }

  .footer-links {
    list-style: none;
  }

  .footer-links li {
    margin-bottom: 0.7rem;
  }

  .footer-links a {
    color: #e0f7fa;
    text-decoration: none;
    transition: all 0.3s ease;
    display: block;
    padding: 0.3rem 0;
  }

  .footer-links a:hover {
    color: #fff;
    transform: translateX(5px);
  }

  .copyright {
    text-align: center;
    padding-top: 2rem;
    margin-top: 2rem;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    font-size: 0.9rem;
    color: #c1eef2;
  }

  .copyright a {
    color: #fff;
    text-decoration: none;
    font-weight: 500;
  }

  .copyright a:hover {
    text-decoration: underline;
  }

  /* Media Queries for Responsive Design */
  @media (max-width: 992px) {
    .navbar {
      padding: 1rem;
    }
    
    .hamburger {
      display: flex;
    }
    
    .nav-links {
      position: absolute;
      top: 100%;
      left: 0;
      width: 100%;
      background-color: #006d77;
      flex-direction: column;
      align-items: flex-start;
      padding: 1.5rem 2rem;
      gap: 0;
      box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
      transform: translateY(-150%);
      opacity: 0;
    }
    
    .nav-links.active {
      transform: translateY(0);
      opacity: 1;
    }
    
    .nav-links li {
      width: 100%;
      margin: 0.5rem 0;
    }
    
    .nav-links a {
      display: block;
      width: 100%;
      padding: 0.8rem 1rem;
    }
    
    .hero h1 {
      font-size: 2.2rem;
    }
    
    .hero p {
      font-size: 1.1rem;
    }
    
    .lang-selector {
      width: 100%;
      margin-top: 1rem;
    }
  }

  @media (max-width: 768px) {
    .generator-container {
      grid-template-columns: 1fr;
    }
  }
  
  /* Modified styles for small screens below 430px */
  @media (max-width: 430px) {
    body {
      font-size: 14px;
    }

    .container, .generator-container {
      padding: 0 0.5rem;
      width: 100%;
      max-width: 100%;
      overflow-x: hidden;
      box-sizing: border-box;
    }

    .card {
      padding: 1rem;
      width: 100%;
      margin: 0;
      box-sizing: border-box;
      min-width: 0;
    }

    .section-title {
      font-size: 1.2rem;
      margin-bottom: 1.5rem;
    }

    .input-group {
      grid-template-columns: 1fr !important;
      gap: 0.8rem;
    }

    .input-field label {
      font-size: 0.9rem;
    }

    input, select, textarea {
      font-size: 1rem;
      width: 100%;
      max-width: 100%;
    }
    
    .hero {
      padding: 2rem 0.5rem;
    }
    
    .hero h1 {
      font-size: 1.8rem;
    }
    
    .hero p {
      font-size: 0.9rem;
      padding: 0 0.5rem;
    }
    
    .action-btn {
      padding: 0.8rem 1rem;
      font-size: 1rem;
    }
  }

  /* Username Generator specific styles */
  .username-settings {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
  }
  
  @media (max-width: 576px) {
    .username-settings {
      grid-template-columns: 1fr;
    }
  }
  
  .username-display {
    font-family: 'Courier New', monospace;
    font-size: 1.5rem;
    text-align: center;
    padding: 2rem;
    background: #f0f9ff;
    border-radius: 12px;
    margin: 2rem 0;
    min-height: 100px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #006d77;
    font-weight: bold;
  }
  
  .username-history {
    max-height: 200px;
    overflow-y: auto;
    padding: 1rem;
    background: #f0f9ff;
    border-radius: 8px;
    margin-top: 1rem;
  }
  
  .username-history p {
    margin: 0.5rem 0;
    padding: 0.5rem;
    background: white;
    border-radius: 4px;
    font-family: 'Courier New', monospace;
  }
  
  .clear-history {
    margin-top: 1rem;
    padding: 0.5rem 1rem;
    background: #4db5bd;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }
  
  .clear-history:hover {
    background: #006d77;
  }
  
  /* Info Card Styles */
  .card h3 {
    color: #006d77;
    margin-bottom: 1rem;
    padding-bottom: 0.5rem;
    border-bottom: 2px solid #e0f7fa;
  }

  .card ul {
    margin: 1rem 0;
    padding-left: 1.5rem;
  }

  .card li {
    margin-bottom: 0.5rem;
    color: #555;
  }

  .card p {
    color: #555;
    margin: 1rem 0;
    line-height: 1.6;
  }
</style>
</head>
<body>
  <header>
    <nav class="navbar">
      <a href="/index-en.html" class="logo">
        <i class="fas fa-calculator logo-icon"></i>
        Calculator2U
      </a>
      
      <button class="hamburger" id="hamburger">
        <div class="line1"></div>
        <div class="line2"></div>
        <div class="line3"></div>
      </button>
      
      <ul class="nav-links" id="navLinks">
        <li><a href="/en/health/index.html">Health & Body</a></li>
        <li><a href="/en/finance/index.html">Finance & Investment</a></li>
        <li><a href="/en/education/index.html">Education & Learning</a></li>
        <li><a href="/en/engineering/index.html">Engineering & Science</a></li>
        <li><a href="/en/daily-life/index.html">Work & Life</a></li>
        <li><a href="/en/generator/index.html" class="active">Generator</a></li>
        <li><a href="/en/games/index.html">Games</a></li>
        <li><a href="/about-en.html">About Us</a></li>
        <li class="lang-selector">
          <select id="lang-select" class="lang-select">
            <option value="en">English</option>
            <option value="zh">中文 (Chinese)</option>
            <option value="es">Español (Spanish)</option>
            <option value="de">Deutsch (German)</option>
            <option value="fr">Français (French)</option>
          </select>
        </li>
      </ul>
    </nav>
  </header>

  <!-- Hero Section -->
  <section class="hero">
    <h1>Username Generator</h1>
    <p>Create unique and creative usernames with our generator. Customize your preferences and get instant suggestions.</p>
  </section>

  <main class="container">
    <h2 class="section-title">Generate Unique Usernames</h2>
    
    <div class="generator-container">
      <!-- Generator Card -->
      <div class="card">
        <h3 class="payslip-section-title">Username Generation Settings</h3>
        
        <div class="input-group">
          <div class="input-field">
            <label for="username-prefix">Prefix (Optional):</label>
            <input type="text" id="username-prefix" placeholder="e.g., cool, super">
          </div>
          
          <div class="input-field">
            <label for="username-suffix">Suffix (Optional):</label>
            <input type="text" id="username-suffix" placeholder="e.g., 2023, pro">
          </div>
        </div>
        
        <div class="input-group">
          <div class="input-field">
            <label for="username-length">Username Length:</label>
            <input type="number" id="username-length" value="10" min="3" max="20">
          </div>
          
          <div class="input-field">
            <label for="username-count">Number of Suggestions:</label>
            <input type="number" id="username-count" value="5" min="1" max="20">
          </div>
        </div>
        
        <div class="input-group">
          <div class="input-field">
            <label for="include-numbers">Include Numbers:</label>
            <select id="include-numbers">
              <option value="true">Yes</option>
              <option value="false">No</option>
            </select>
          </div>
          
          <div class="input-field">
            <label for="include-special">Include Special Characters:</label>
            <select id="include-special">
              <option value="false">No</option>
              <option value="true">Yes</option>
            </select>
          </div>
        </div>
        
        <button class="action-btn" id="generate-username">
          <i class="fas fa-magic"></i> Generate Usernames
        </button>
        
        <div class="username-display" id="username-display">
          No username generated yet
        </div>
        
        <div class="input-field">
          <label>Username History:</label>
          <div class="username-history" id="username-history"></div>
        </div>
        
        <button class="clear-history" id="clear-history">
          Clear History
        </button>
      </div>
      
      <!-- Info Card -->
      <div class="card">
        <h3>About Username Generation</h3>
        <p>Username generators are tools that help users create unique and memorable usernames for various online platforms. They are useful for:</p>
        <ul>
          <li><strong>Social Media:</strong> Creating distinctive profiles</li>
          <li><strong>Gaming:</strong> Establishing memorable in-game identities</li>
          <li><strong>Professional Use:</strong> Creating professional handles</li>
          <li><strong>Content Creation:</strong> Finding catchy names for platforms</li>
          <li><strong>Personal Branding:</strong> Developing a consistent online presence</li>
        </ul>
        
        <h3>How This Generator Works</h3>
        <p>Our username generator uses a combination of random words, numbers, and special characters to create unique usernames based on your preferences. You can customize the length, include numbers or special characters, and even add your own prefix or suffix.</p>
        
        <h3>Best Practices</h3>
        <p>Follow these tips for effective username creation:</p>
        <ul>
          <li>Choose usernames that are easy to remember and spell</li>
          <li>Consider your target audience and platform</li>
          <li>Keep it professional if needed for business purposes</li>
          <li>Test availability across multiple platforms</li>
          <li>Use this tool to generate multiple options to choose from</li>
        </ul>
      </div>
    </div>
  </main>

  <footer>
    <div class="footer-container">
      <div class="footer-column">
        <h3>Calculator2U</h3>
        <p>Your trusted source for daily life calculators and financial tools. Helping you create unique usernames since 2025.</p>
      </div>
      <div class="footer-column">
        <h3>Other Useful Generators</h3>
        <ul class="footer-links">
          <li><a href="/en/generator/password-generator.html" id="util1">Password Generator</a></li>
          <li><a href="/en/generator/qr-code-generator.html" id="util2">QR Code Generator</a></li>
          <li><a href="/en/generator/username-generator.html" id="util3">Username Generator</a></li>
          <li><a href="/en/generator/random-number-generator.html" id="util4">Random Number Generator</a></li>
        </ul>
      </div>
      <div class="footer-column">
        <h3>Legal Information</h3>
        <ul class="footer-links">
          <li><a href="/privacy-en.html">Privacy Policy</a></li>
          <li><a href="/terms-en.html">Terms of Service</a></li>
        </ul>
      </div>
    </div>
    <div class="copyright">
      <p>&copy; 2025 Calculator2U. All rights reserved. | 
        <a href="/privacy-en.html">Privacy Policy</a> | 
        <a href="/terms-en.html">Terms of Service</a>
      </p>
      <p><small>Note: This username generator provides suggestions for usernames. Always verify username availability on your target platform.</small></p>
    </div>
  </footer>

  <script>
    (function() {
      // DOM Elements
      const hamburger = document.getElementById('hamburger');
      const navLinks = document.getElementById('navLinks');
      const langSelect = document.getElementById('lang-select');
      
      // Username generator elements
      const usernamePrefix = document.getElementById('username-prefix');
      const usernameSuffix = document.getElementById('username-suffix');
      const usernameLength = document.getElementById('username-length');
      const usernameCount = document.getElementById('username-count');
      const includeNumbers = document.getElementById('include-numbers');
      const includeSpecial = document.getElementById('include-special');
      const generateBtn = document.getElementById('generate-username');
      const displayEl = document.getElementById('username-display');
      const historyEl = document.getElementById('username-history');
      const clearHistoryBtn = document.getElementById('clear-history');
      
      // Word list for username generation
      const adjectives = ['cool', 'super', 'awesome', 'amazing', 'amazing', 'brilliant', 'calm', 'crazy', 'cute', 'daring', 'dreamy', 'fancy', 'friendly', 'funny', 'gentle', 'happy', 'jolly', 'legendary', 'lovely', 'lucky', 'mighty', 'neat', 'nice', 'perfect', 'quiet', 'rapid', 'shiny', 'smart', 'speedy', 'strong', 'super', 'sweet', 'top', 'vivid', 'wild', 'zany'];
      const nouns = ['apple', 'blade', 'boozer', 'breeze', 'bubble', 'butterfly', 'captain', 'champion', 'cheetah', 'chaser', 'cricket', 'dancer', 'dolphin', 'dreamer', 'eagle', 'explorer', 'falcon', 'fox', 'gem', 'giraffe', 'hawk', 'hero', 'jaguar', 'joker', 'knight', 'lion', 'master', 'moon', 'night', 'panther', 'phantom', 'pioneer', 'raven', 'star', 'storm', 'thunder', 'tiger', 'vanguard', 'vulture', 'whisper', 'wolf', 'xray', 'youth', 'zenith'];
      const specialChars = ['!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '-', '_', '=', '+', '[', ']', '{', '}', '|', '\\', ':', ';', '"', "'", '<', '>', ',', '.', '?', '/'];
      
      // Generate usernames
      function generateUsernames() {
        const prefix = usernamePrefix.value.trim();
        const suffix = usernameSuffix.value.trim();
        const length = parseInt(usernameLength.value);
        const count = parseInt(usernameCount.value);
        const useNumbers = includeNumbers.value === 'true';
        const useSpecial = includeSpecial.value === 'true';
        
        // Validate input
        if (isNaN(length) || isNaN(count)) {
          alert('Please enter valid numbers for length and count.');
          return;
        }
        
        if (length < 3 || length > 20) {
          alert('Username length should be between 3 and 20 characters.');
          return;
        }
        
        if (count < 1 || count > 20) {
          alert('Please select between 1 and 20 suggestions.');
          return;
        }
        
        // Clear display
        displayEl.textContent = 'Generating...';
        
        // Generate usernames
        let usernames = [];
        
        for (let i = 0; i < count; i++) {
          let username = '';
          
          // Add prefix if provided
          if (prefix) {
            username += prefix;
          }
          
          // Generate main part of username
          let mainPart;
          do {
            const adj = adjectives[Math.floor(Math.random() * adjectives.length)];
            const noun = nouns[Math.floor(Math.random() * nouns.length)];
            mainPart = adj + noun;
            
            // Ensure mainPart doesn't make the username too long
          } while ((prefix ? prefix.length : 0) + mainPart.length + (suffix ? suffix.length : 0) + (useNumbers ? 3 : 0) + (useSpecial ? 1 : 0) > length);
          
          username += mainPart;
          
          // Add numbers if requested
          if (useNumbers) {
            const numLength = Math.min(length - username.length - (suffix ? suffix.length : 0), 3);
            if (numLength > 0) {
              const num = Math.floor(Math.random() * Math.pow(10, numLength));
              username += String(num).padStart(numLength, '0');
            }
          }
          
          // Add special character if requested and there's space
          if (useSpecial && username.length < length - (suffix ? suffix.length : 0)) {
            const specialChar = specialChars[Math.floor(Math.random() * specialChars.length)];
            username = username.slice(0, -1) + specialChar;
          }
          
          // Add suffix if provided and there's space
          if (suffix && username.length + suffix.length <= length) {
            username += suffix;
          }
          
          // Truncate if necessary
          if (username.length > length) {
            username = username.substring(0, length);
          }
          
          // Ensure uniqueness in the generated list
          if (usernames.includes(username)) {
            i--;
            continue;
          }
          
          usernames.push(username);
        }
        
        // Update display
        displayEl.textContent = usernames.join('\n');
        
        // Update history
        const now = new Date().toLocaleTimeString();
        const historyItem = document.createElement('p');
        historyItem.textContent = `${now}: ${usernames.join(', ')}`;
        historyEl.prepend(historyItem);
      }
      
      // Clear history
      function clearHistory() {
        historyEl.innerHTML = '';
      }
      
      // Event Listeners
      generateBtn.addEventListener('click', generateUsernames);
      clearHistoryBtn.addEventListener('click', clearHistory);
      
      // Hamburger menu functionality
      hamburger.addEventListener('click', () => {
        navLinks.classList.toggle('active');
        hamburger.classList.toggle('active');
      });
      
      // Close menu when clicking outside
      document.addEventListener('click', (event) => {
        const isClickInsideNav = navLinks.contains(event.target) || hamburger.contains(event.target);
        if (!isClickInsideNav && navLinks.classList.contains('active')) {
          navLinks.classList.remove('active');
          hamburger.classList.remove('active');
        }
      });

      // Language selector functionality
      langSelect.addEventListener('change', function() {
        const selectedLang = this.value;
        let targetUrl = '';
        
        // Build target URL based on selected language
        switch(selectedLang) {
          case 'zh':
            targetUrl = '/zh/generator/username-generator.html';
            break;
          case 'es':
            targetUrl = '/es/generator/username-generator.html';
            break;
          case 'de':
            targetUrl = '/de/generator/username-generator.html';
            break;
          case 'fr':
            targetUrl = '/fr/generator/username-generator.html';
            break;
          default: // English
            targetUrl = '/en/generator/username-generator.html';
        }
        
        window.location.href = targetUrl;
      });
      
      // Initialize with default values
      window.addEventListener('load', () => {
        generateUsernames();
      });
    })();
  </script>
</body>
</html>