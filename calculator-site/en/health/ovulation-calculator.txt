<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta http-equiv="Content-Language" content="auto" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Ovulation Calculator | Calculator2U</title>
<meta name="description" content="Calculate your ovulation date, fertile window, and conception probability to maximize your chances of getting pregnant." />
<meta name="keywords" content="ovulation calculator, fertility calculator, ovulation tracker, conception calculator" />
<meta name="author" content="Calculator2U" />
<link rel="canonical" href="https://www.calculator2u.com/en/health/ovulation-calculator.html" />
<link rel=" hreflang="en" href="https://www.calculator2u.com/en/health/ovulation-calculator.html"/>
<link rel=" hreflang="zh" href="https://www.calculator2u.com/zh/health/ovulation-calculator.html"/>
<link rel=" hreflang="es" href="https://www.calculator2u.com/es/health/ovulation-calculator.html"/>
<link rel=" hreflang="fr" href="https://www.calculator2u.com/fr/health/ovulation-calculator.html"/>
<link rel=" hreflang="de" href="https://www.calculator2u.com/de/health/ovulation-calculator.html"/>
<link rel=" hreflang="x-default" href="https://www.calculator2u.com/en/health/ovulation-calculator.html"/>
<meta property="og:title" content="Ovulation Calculator | Calculator2U" />
<meta property="og:description" content="Calculate your ovulation date, fertile window, and conception probability to maximize your chances of getting pregnant." />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://www.calculator2u.com/en/health/ovulation-calculator.html" />
<meta property="og:image" content="https://www.calculator2u.com/assets/images/ovulation-calculator.jpg" />
<meta property="og:locale" content="en_US" />
<meta property="og:site_name" content="Calculator2U" />

<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-RLH4FLZBZF"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-RLH4FLZBZF');
</script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<style>
  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }

  body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    margin: 0;
    background: #f9f9f9;
    color: #333;
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    background: linear-gradient(135deg, #f0f9ff 0%, #e6f7ff 100%);
    overflow-x: hidden;
    font-size: 14px;
  }

  /* Header & Navigation */
  header {
    background-color: #006d77;
    position: sticky;
    top: 0;
    z-index: 100;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }

  .navbar {
    padding: 1rem 2rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
  }

  .navbar .logo {
    color: #fff;
    font-size: 1.5rem;
    text-decoration: none;
    font-weight: bold;
    display: flex;
    align-items: center;
  }

  .logo-icon {
    margin-right: 10px;
    font-size: 1.8rem;
  }

  .nav-links {
    list-style: none;
    display: flex;
    flex-wrap: wrap;
    gap: 1.5rem;
    padding-left: 0;
    margin: 0;
    align-items: center;
    transition: all 0.4s ease;
  }

  .nav-links a {
    color: #fff;
    text-decoration: none;
    transition: color 0.3s;
    font-weight: 500;
    padding: 0.5rem 0.8rem;
    border-radius: 4px;
  }

  .nav-links a:hover,
  .nav-links a.active {
    background-color: rgba(255, 255, 255, 0.15);
  }

  /* Language selector styles */
  .lang-selector {
    position: relative;
    display: inline-block;
    min-width: 140px;
  }
  
  .lang-select {
    background: transparent;
    border: 1.5px solid #fff;
    color: #fff;
    padding: 0.3rem 1.8rem 0.3rem 0.8rem;
    border-radius: 4px;
    cursor: pointer;
    font-weight: 600;
    font-size: 0.9rem;
    outline: none;
    width: 100%;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='white' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: right 0.7rem center;
    background-size: 1rem;
  }
  
  .lang-select option {
    background-color: #006d77;
    color: #fff;
  }

  .hamburger {
    display: none;
    flex-direction: column;
    justify-content: space-around;
    width: 2rem;
    height: 2rem;
    background: transparent;
    border: none;
    cursor: pointer;
    padding: 0;
    z-index: 10;
  }

  .hamburger:focus {
    outline: none;
  }

  .hamburger div {
    width: 2rem;
    height: 0.25rem;
    background: #fff;
    border-radius: 10px;
    transition: all 0.3s linear;
    position: relative;
    transform-origin: 1px;
  }

  /* Hero Section */
  .hero {
    background: linear-gradient(135deg, #006d77 0%, #008891 100%);
    color: white;
    text-align: center;
    padding: 4rem 1rem;
    margin-bottom: 3rem;
    position: relative;
    overflow: hidden;
  }

  .hero::before {
    content: "";
    position: absolute;
    top: -50px;
    left: -50px;
    width: 150px;
    height: 150px;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.1);
  }

  .hero::after {
    content: "";
    position: absolute;
    bottom: -80px;
    right: -80px;
    width: 200px;
    height: 200px;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.1);
  }

  .hero-content {
    position: relative;
    z-index: 1;
    max-width: 800px;
    margin: 0 auto;
  }

  .hero h1 {
    font-size: 2.8rem;
    margin-bottom: 1rem;
    color: #fff;
    text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.2);
  }

  .hero p {
    font-size: 1.2rem;
    margin: 0 auto 1.5rem;
    color: rgba(255, 255, 255, 0.9);
    max-width: 700px;
  }

  .visual-indicator {
    display: flex;
    justify-content: center;
    margin-top: 2rem;
    gap: 10px;
  }

  .stage-dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.3);
    transition: all 0.3s ease;
  }

  .stage-dot.active {
    background: #ffd166;
    transform: scale(1.3);
  }

  /* Main Content */
  .container {
    max-width: 1200px;
    width: 100%;
    margin: 0 auto 3rem;
    padding: 0 1.5rem;
    text-align: center;
    flex: 1;
  }

  .section-title {
    text-align: center;
    margin-bottom: 2.5rem;
    color: #006d77;
    position: relative;
    padding-bottom: 1rem;
    font-size: 1.8rem;
  }

  .section-title::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 4px;
    background-color: #ffd166;
    border-radius: 2px;
  }

  /* Ovulation Calculator Styles */
  .ovulation-container {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
    max-width: 1200px;
    width: 100%;
    margin: 0 auto;
    padding: 0 1.5rem;
  }
  
  @media (min-width: 992px) {
    .ovulation-container {
      grid-template-columns: 1fr 1fr;
    }
  }
  
  .calculator-card {
    background: white;
    border-radius: 12px;
    padding: 2rem;
    box-shadow: 0 10px 30px rgba(0, 107, 117, 0.15);
    position: relative;
    overflow: hidden;
  }

  .calculator-card::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 5px;
    background: linear-gradient(90deg, #ffd166, #4db5bd, #006d77);
  }
  
  .input-group {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1.2rem;
    margin-bottom: 1.5rem;
  }
  
  @media (min-width: 576px) {
    .input-group {
      grid-template-columns: 1fr 1fr;
    }
  }
  
  .input-field {
    display: flex;
    flex-direction: column;
    position: relative;
  }

  .input-field label {
    margin-bottom: 0.5rem;
    font-weight: 500;
    color: #006d77;
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 0.9rem;
  }

  .input-field label i {
    color: #4db5bd;
  }
  
  .input-field input,
  .input-field select {
    padding: 0.8rem 1rem;
    border: 2px solid #e0f7fa;
    border-radius: 8px;
    font-size: 1rem;
    transition: all 0.3s;
    background: #f8fdff;
  }
  
  .input-field input:focus,
  .input-field select:focus {
    outline: none;
    border-color: #4db5bd;
    box-shadow: 0 0 0 3px rgba(77, 181, 189, 0.2);
  }

  .input-note {
    font-size: 0.85rem;
    color: #666;
    margin-top: 0.3rem;
    text-align: left;
  }
  
  .calculate-btn {
    background: linear-gradient(to right, #ffd166, #ffb142);
    color: #333;
    border: none;
    padding: 1rem 2rem;
    font-size: 1rem;
    font-weight: 600;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s;
    display: block;
    width: 100%;
    margin-top: 1rem;
    box-shadow: 0 4px 10px rgba(255, 178, 66, 0.3);
    position: relative;
    overflow: hidden;
  }
  
  .calculate-btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 6px 15px rgba(255, 178, 66, 0.4);
  }

  .calculate-btn:active {
    transform: translateY(0);
  }

  .calculate-btn i {
    margin-right: 10px;
  }
  
  .result-container {
    display: none;
    background: linear-gradient(to bottom right, #f0f9ff, #e0f7fa);
    border-radius: 12px;
    padding: 2rem;
    margin-top: 2rem;
    border-left: 5px solid #4db5bd;
    animation: fadeIn 0.5s ease-in-out;
    box-shadow: 0 5px 15px rgba(0, 107, 117, 0.1);
  }
  
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  .result-header {
    text-align: center;
    margin-bottom: 1.5rem;
    color: #006d77;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    font-size: 1.2rem;
  }

  .result-header i {
    color: #ffd166;
    font-size: 1.6rem;
  }
  
  .ovulation-data {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 1rem;
    margin-bottom: 1.5rem;
  }
  
  .ovulation-item {
    background: white;
    border-radius: 8px;
    padding: 1.2rem;
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.05);
    transition: transform 0.3s;
    border: 1px solid #e0f7fa;
  }

  .ovulation-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
  }
  
  .ovulation-item-title {
    font-weight: 600;
    color: #006d77;
    margin-bottom: 0.8rem;
    font-size: 0.85rem;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 5px;
  }
  
  .ovulation-item-value {
    font-size: 1.3rem;
    font-weight: 700;
    color: #4db5bd;
  }

  .ovulation-item-sub {
    font-size: 0.8rem;
    color: #666;
    margin-top: 5px;
  }
  
  .fertility-info {
    background: white;
    padding: 1.5rem;
    border-radius: 8px;
    line-height: 1.6;
    margin-top: 1.5rem;
    border: 1px solid #e0f7fa;
    text-align: left;
    font-size: 0.9rem;
  }
  
  .fertility-info h3 {
    color: #006d77;
    margin-bottom: 0.8rem;
    display: flex;
    align-items: center;
    gap: 10px;
    font-size: 1.1rem;
  }
  
  .fertility-info .progress-bar {
    height: 8px;
    background: #e0f7fa;
    border-radius: 4px;
    margin: 1rem 0;
    overflow: hidden;
  }
  
  .fertility-info .progress {
    height: 100%;
    background: linear-gradient(to right, #4db5bd, #006d77);
    border-radius: 4px;
    transition: width 0.8s ease;
  }
  
  .conception-probability {
    margin-top: 15px;
    padding: 10px;
    background: #f9f9f9;
    border-radius: 8px;
    border-left: 3px solid #ffd166;
    font-size: 0.9rem;
  }

  .conception-probability h4 {
    color: #006d77;
    margin-bottom: 8px;
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 1rem;
  }

  .conception-probability ul {
    padding-left: 20px;
    margin-top: 8px;
    font-size: 0.85rem;
  }

  .conception-probability li {
    margin-bottom: 5px;
    line-height: 1.5;
  }
  
  /* Fertility Calendar */
  .calendar-container {
    overflow-x: auto;
    margin-top: 2rem;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.05);
    max-width: 100%;
  }
  
  .fertility-calendar {
    width: 100%;
    min-width: 600px;
    border-collapse: collapse;
    background: white;
    font-size: 0.85rem;
  }
  
  .fertility-calendar th {
    background: #006d77;
    color: white;
    padding: 0.8rem;
    text-align: center;
    font-weight: 500;
    font-size: 0.9rem;
  }
  
  .fertility-calendar td {
    padding: 0.6rem;
    border: 1px solid #e0f7fa;
    text-align: center;
    position: relative;
    height: 50px;
    vertical-align: top;
    font-size: 0.85rem;
  }
  
  .calendar-day {
    font-weight: 600;
    position: absolute;
    top: 5px;
    left: 5px;
    width: 22px;
    height: 22px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    font-size: 0.85rem;
  }
  
  .fertility-calendar .today .calendar-day {
    background: #ffd166;
    color: #333;
  }
  
  .fertility-calendar .ovulation-day .calendar-day {
    background: #e74c3c;
    color: white;
  }
  
  .fertility-calendar .fertile-day .calendar-day {
    background: #f39c12;
    color: white;
  }
  
  .fertility-status {
    font-size: 0.65rem;
    margin-top: 22px;
    padding: 1px 4px;
    border-radius: 3px;
    font-weight: 500;
  }
  
  .low-fertility {
    background-color: #e0f7fa;
    color: #006d77;
  }
  
  .medium-fertility {
    background-color: #ffecb3;
    color: #7d6608;
  }
  
  .high-fertility {
    background-color: #ffccbc;
    color: #bf360c;
  }
  
  .peak-fertility {
    background-color: #ffab91;
    color: #bf360c;
    font-weight: bold;
  }

  .period-day {
    background-color: #f8e0f0;
  }
  
  .info-card {
    background: white;
    border-radius: 12px;
    padding: 2rem;
    box-shadow: 0 10px 30px rgba(0, 107, 117, 0.15);
    position: relative;
    overflow: hidden;
  }
  
  .info-card::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 5px;
    background: linear-gradient(90deg, #4db5bd, #006d77);
  }

  .info-card h3 {
    color: #006d77;
    margin-bottom: 1.2rem;
    position: relative;
    padding-bottom: 0.8rem;
    display: flex;
    align-items: center;
    gap: 10px;
    font-size: 1.2rem;
  }
  
  .info-card h3::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 50px;
    height: 3px;
    background: #ffd166;
  }
  
  .info-card ul {
    padding-left: 1.5rem;
    margin-bottom: 1.5rem;
    font-size: 0.9rem;
  }
  
  .info-card li {
    margin-bottom: 0.8rem;
    line-height: 1.6;
    position: relative;
    font-size: 0.9rem;
  }

  .info-card li::before {
    content: "•";
    color: #4db5bd;
    font-weight: bold;
    display: inline-block; 
    width: 1em;
    margin-left: -1em;
  }

  .info-card .highlight {
    background: linear-gradient(to right, #ffd166, #ffd166);
    padding: 2px 5px;
    border-radius: 3px;
    font-weight: 500;
  }

  .timeline-visual {
    display: flex;
    justify-content: space-between;
    position: relative;
    height: 50px;
    margin: 2rem 0;
  }

  .timeline-visual::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 0;
    right: 0;
    height: 3px;
    background: #e0f7fa;
    transform: translateY(-50%);
  }

  .timeline-item {
    position: relative;
    z-index: 1;
    text-align: center;
    flex: 1;
  }

  .timeline-item .dot {
    width: 18px;
    height: 18px;
    background: white;
    border: 2px solid #4db5bd;
    border-radius: 50%;
    margin: 0 auto 5px;
    position: relative;
  }

  .timeline-item.active .dot {
    background: #ffd166;
    border-color: #ffb142;
    transform: scale(1.1);
  }

  .timeline-item .label {
    font-size: 0.7rem;
    color: #006d77;
    font-weight: 500;
    white-space: nowrap;
  }

  .health-tips {
    background: #f0f9ff;
    border-radius: 10px;
    padding: 1.5rem;
    margin-top: 1.5rem;
    border: 1px dashed #4db5bd;
    font-size: 0.9rem;
  }

  .health-tips h4 {
    color: #006d77;
    margin-bottom: 1rem;
    display: flex;
    align-items: center;
    gap: 10px;
    font-size: 1rem;
  }

  /* Cycle History */
  .history-container {
    background: #f9f9f9;
    border-radius: 10px;
    padding: 1.5rem;
    margin-top: 1.5rem;
    border: 1px solid #e0f7fa;
    display: none;
  }

  .history-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
  }

  .history-list {
    max-height: 200px;
    overflow-y: auto;
  }

  .history-item {
    display: flex;
    justify-content: space-between;
    padding: 0.8rem;
    border-bottom: 1px solid #e0f7fa;
  }

  .history-item:last-child {
    border-bottom: none;
  }

  .history-dates {
    font-size: 0.9rem;
  }

  .history-duration {
    color: #666;
    font-size: 0.85rem;
  }

  .history-btn {
    background: #4db5bd;
    color: white;
    border: none;
    padding: 0.4rem 0.8rem;
    border-radius: 4px;
    cursor: pointer;
    font-size: 0.8rem;
  }
  
  /* Footer */
  footer {
    background: linear-gradient(to bottom, #006d77, #004f56);
    color: #fff;
    padding: 3rem 1rem;
    margin-top: auto;
  }

  .footer-container {
    max-width: 1200px;
    width: 100%;
    margin: 0 auto;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 2rem;
  }

  .footer-column h3 {
    font-size: 1.3rem;
    margin-bottom: 1.2rem;
    position: relative;
    padding-bottom: 0.5rem;
  }

  .footer-column h3::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 50px;
    height: 2px;
    background-color: #4db5bd;
  }

  .footer-links {
    list-style: none;
  }

  .footer-links li {
    margin-bottom: 0.7rem;
  }

  .footer-links a {
    color: #e0f7fa;
    text-decoration: none;
    transition: all 0.3s ease;
    display: block;
    padding: 0.3rem 0;
    font-size: 0.9rem;
  }

  .footer-links a:hover {
    color: #fff;
    transform: translateX(5px);
  }

  .copyright {
    text-align: center;
    padding-top: 2rem;
    margin-top: 2rem;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    font-size: 0.8rem;
    color: #c1eef2;
  }

  .copyright a {
    color: #fff;
    text-decoration: none;
    font-weight: 500;
  }

  .copyright a:hover {
    text-decoration: underline;
  }

  /* Media Queries for Responsive Design */
  @media (max-width: 992px) {
    .navbar {
      padding: 1rem;
    }
    
    .hamburger {
      display: flex;
    }
    
    .nav-links {
      position: absolute;
      top: 100%;
      left: 0;
      width: 100%;
      background-color: #006d77;
      flex-direction: column;
      align-items: flex-start;
      padding: 1.5rem 2rem;
      gap: 0;
      box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
      transform: translateY(-150%);
      opacity: 0;
    }
    
    .nav-links.active {
      transform: translateY(0);
      opacity: 1;
    }
    
    .nav-links li {
      width: 100%;
      margin: 0.5rem 0;
    }
    
    .nav-links a {
      display: block;
      width: 100%;
      padding: 0.8rem 1rem;
      font-size: 0.9rem;
    }
    
    .hero h1 {
      font-size: 2.2rem;
    }
    
    .hero p {
      font-size: 1.1rem;
    }
    
    .lang-selector {
      width: 100%;
      margin-top: 1rem;
    }

    .ovulation-data {
      grid-template-columns: 1fr 1fr;
    }
  }

  @media (max-width: 768px) {
    .hero {
      padding: 3rem 1rem;
    }

    .hero h1 {
      font-size: 2rem;
    }

    .hero p {
      font-size: 1rem;
    }

    .calculator-card,
    .info-card {
      padding: 1.5rem;
    }

    .ovulation-item {
      padding: 0.8rem;
    }

    .ovulation-item-value {
      font-size: 1.2rem;
    }
  }

  @media (max-width: 576px) {
    .ovulation-container {
      grid-template-columns: 1fr;
    }

    .input-group {
      grid-template-columns: 1fr;
    }

    .ovulation-data {
      grid-template-columns: 1fr;
    }

    .hero h1 {
      font-size: 1.8rem;
    }

    .hero p {
      font-size: 0.9rem;
    }
    
    .section-title {
      font-size: 1.5rem;
    }
    
    .result-header {
      font-size: 1rem;
    }
    
    .result-header i {
      font-size: 1.4rem;
    }
    
    .fertility-info h3,
    .conception-probability h4 {
      font-size: 0.9rem;
    }
  }
  
  /* NEW: Added media query for 430px and below */
  @media (max-width: 430px) {
    .container {
      padding: 0 0.8rem;
    }
    
    .ovulation-container {
      padding: 0;
    }
    
    .calculator-card,
    .info-card {
      padding: 1.2rem;
      border-radius: 10px;
    }
    
    .ovulation-data {
      grid-template-columns: 1fr;
      gap: 0.8rem;
    }
    
    .ovulation-item {
      padding: 1rem;
    }
    
    .fertility-calendar {
      min-width: 100%;
      font-size: 0.75rem;
    }
    
    .fertility-calendar th {
      padding: 0.5rem;
      font-size: 0.8rem;
    }
    
    .fertility-calendar td {
      height: 40px;
      padding: 0.3rem;
    }
    
    .calendar-day {
      width: 18px;
      height: 18px;
      font-size: 0.75rem;
    }
    
    .fertility-status {
      font-size: 0.6rem;
      margin-top: 18px;
    }
    
    .timeline-visual .label {
      font-size: 0.6rem;
    }
    
    .health-tips {
      padding: 1rem;
    }
    
    .hero {
      padding: 2.5rem 1rem;
    }
    
    .hero h1 {
      font-size: 1.6rem;
    }
    
    .hero p {
      font-size: 0.85rem;
    }
    
    .section-title {
      font-size: 1.3rem;
      margin-bottom: 1.5rem;
    }
    
    .section-title::after {
      height: 3px;
      width: 60px;
    }
    
    .fertility-info {
      padding: 1rem;
    }
    
    .conception-probability {
      padding: 8px;
    }
    
    .conception-probability ul {
      padding-left: 15px;
      font-size: 0.8rem;
    }
    
    .input-field input,
    .input-field select {
      padding: 0.7rem;
    }
    
    .calculate-btn {
      padding: 0.9rem;
      font-size: 0.95rem;
    }
  }

  /* Animation for progress bar */
  @keyframes progressGrow {
    from { width: 0; }
    to { width: var(--progress-value); }
  }

  /* Error message styling */
  .error-message {
    color: #e74c3c;
    font-size: 0.8rem;
    margin-top: 5px;
    text-align: left;
    display: none;
  }

  .input-field.error input {
    border-color: #e74c3c;
    background: #fff6f6;
  }

  .input-field.error .error-message {
    display: block;
  }
</style>
</head>
<body>
  <header>
    <nav class="navbar">
      <a href="/index-en.html" class="logo">
        <i class="fas fa-calculator logo-icon"></i>
        Calculator2U
      </a>
      
      <button class="hamburger" id="hamburger">
        <div class="line1"></div>
        <div class="line2"></div>
        <div class="line3"></div>
      </button>
      
      <ul class="nav-links" id="navLinks">
        <li><a href="/en/health/index.html">Health & Body</a></li>
        <li><a href="/en/finance/index.html">Finance & Investment</a></li>
        <li><a href="/en/education/index.html">Education & Learning</a></li>
        <li><a href="/en/engineering/index.html">Engineering & Science</a></li>
        <li><a href="/en/daily-life/index.html">Work & Life</a></li>
        <li><a href="/en/generator/index.html">Generator</a></li>
        <li><a href="/en/games/index.html">Games</a></li>
        <li><a href="/about-en.html">About Us</a></li>
        <li class="lang-selector">
          <select id="lang-select" class="lang-select">
            <option value="en">English</option>
            <option value="zh">中文 (Chinese)</option>
            <option value="es">Español (Spanish)</option>
            <option value="de">Deutsch (German)</option>
            <option value="fr">Français (French)</option>
          </select>
        </li>
      </ul>
    </nav>
  </header>

  <!-- Hero Section -->
  <section class="hero">
    <div class="hero-content">
      <h1>Ovulation & Fertility Calculator</h1>
      <p>Track your fertile window, predict ovulation dates, and maximize your chances of conception.</p>
    </div>
    <div class="visual-indicator">
      <div class="stage-dot active"></div>
      <div class="stage-dot"></div>
      <div class="stage-dot"></div>
    </div>
  </section>

  <main class="container">
    <h2 class="section-title">Ovulation Calculator</h2>
    
    <div class="ovulation-container">
      <!-- Calculator Card -->
      <div class="calculator-card">
        <div class="input-group">
          <div class="input-field">
            <label for="last-period"><i class="fas fa-calendar-day"></i> First Day of Last Menstrual Period</label>
            <input type="date" id="last-period">
            <div class="error-message" id="lmp-error">Please select a valid date</div>
          </div>
          
          <div class="input-field">
            <label for="cycle-length"><i class="fas fa-sync-alt"></i> Menstrual Cycle Length (days)</label>
            <input type="number" id="cycle-length" placeholder="28" min="20" max="45" value="28">
            <div class="input-note">Average cycle length is 28 days</div>
          </div>
        </div>
        
        <div class="input-group">
          <div class="input-field">
            <label for="luteal-length"><i class="fas fa-hourglass-half"></i> Luteal Phase Length (days)</label>
            <input type="number" id="luteal-length" placeholder="14" min="10" max="16" value="14">
            <div class="input-note">Average luteal phase is 14 days</div>
          </div>
          
          <div class="input-field">
            <label for="period-length"><i class="fas fa-tint"></i> Period Length (days)</label>
            <input type="number" id="period-length" placeholder="5" min="3" max="10" value="5">
            <div class="input-note">Average period is 5 days</div>
          </div>
        </div>
        
        <button class="calculate-btn" id="calculate-btn">
          <i class="fas fa-calculator"></i> Calculate Ovulation & Fertility
        </button>
        
        <div class="result-container" id="result-container">
          <h3 class="result-header"><i class="fas fa-heart"></i> Your Fertility Details</h3>
          
          <div class="ovulation-data">
            <div class="ovulation-item">
              <div class="ovulation-item-title"><i class="fas fa-calendar-check"></i> Next Period Date</div>
              <div class="ovulation-item-value" id="next-period">--/--/----</div>
              <div class="ovulation-item-sub" id="cycle-day">Day X of your cycle</div>
            </div>
            <div class="ovulation-item">
              <div class="ovulation-item-title"><i class="fas fa-egg"></i> Estimated Ovulation Date</div>
              <div class="ovulation-item-value" id="ovulation-date">--/--/----</div>
              <div class="ovulation-item-sub" id="ovulation-days">In X days</div>
            </div>
            <div class="ovulation-item">
              <div class="ovulation-item-title"><i class="fas fa-calendar-week"></i> Fertile Window</div>
              <div class="ovulation-item-value" id="fertile-window">--/--/---- to --/--/----</div>
              <div class="ovulation-item-sub">Your most fertile days</div>
            </div>
            <div class="ovulation-item">
              <div class="ovulation-item-title"><i class="fas fa-chart-line"></i> Conception Probability</div>
              <div class="ovulation-item-value" id="conception-probability">XX%</div>
              <div class="ovulation-item-sub" id="fertility-status">High</div>
            </div>
          </div>
          
          <div class="fertility-info">
            <h3><i class="fas fa-tasks"></i> Fertility Status</h3>
            <div class="progress-bar">
              <div class="progress" id="fertility-progress"></div>
            </div>
            <p id="fertility-description">You are in your fertile window. This is the best time to try to conceive.</p>
            
            <div class="conception-probability">
              <h4><i class="fas fa-lightbulb"></i> Conception Probability Guide</h4>
              <ul>
                <li><strong>High probability</strong> (20-33%): 1-2 days before ovulation</li>
                <li><strong>Medium probability</strong> (10-20%): 3-5 days before ovulation</li>
                <li><strong>Low probability</strong> (0-10%): Outside fertile window</li>
                <li><strong>Peak fertility</strong> occurs on the day before ovulation</li>
              </ul>
            </div>
          </div>
          
          <div class="fertility-info">
            <h3><i class="fas fa-calendar-alt"></i> Fertility Calendar</h3>
            <p id="calendar-description">Your fertility status for this cycle:</p>
            <div class="calendar-container">
              <table class="fertility-calendar" id="fertility-calendar">
                <thead>
                  <tr>
                    <th>Sun</th>
                    <th>Mon</th>
                    <th>Tue</th>
                    <th>Wed</th>
                    <th>Thu</th>
                    <th>Fri</th>
                    <th>Sat</th>
                  </tr>
                </thead>
                <tbody>
                  <!-- Calendar will be generated by JavaScript -->
                </tbody>
              </table>
            </div>
          </div>
          
          <div class="history-container" id="history-container">
            <div class="history-header">
              <h3><i class="fas fa-history"></i> Cycle History</h3>
              <button class="history-btn" id="clear-history">Clear</button>
            </div>
            <div class="history-list" id="history-list">
              <!-- Cycle history will be added here -->
            </div>
          </div>
        </div>
      </div>
      
      <!-- Information Card -->
      <div class="info-card">
        <h3><i class="fas fa-info-circle"></i> Understanding Ovulation & Fertility</h3>
        <p>An ovulation calculator helps identify your fertile window based on your menstrual cycle information. Key aspects include:</p>
        <ul>
          <li><span class="highlight">Ovulation Date</span> - When an egg is released from your ovary</li>
          <li><span class="highlight">Fertile Window</span> - The 5-6 days leading up to ovulation</li>
          <li><span class="highlight">Conception Probability</span> - Likelihood of pregnancy on specific days</li>
          <li><span class="highlight">Fertility Calendar</span> - Visual representation of your cycle</li>
        </ul>
        
        <h3><i class="fas fa-calculator"></i> How It Works</h3>
        <p>Ovulation calculators use the first day of your last menstrual period (LMP) and cycle length to predict fertility:</p>
        <p style="background:#f0f9ff;padding:15px;border-radius:8px;font-weight:500;text-align:center;">
          Ovulation Date = LMP + (Cycle Length - Luteal Phase)<br>
          Fertile Window = Ovulation Date - 5 days to Ovulation Date + 1 day
        </p>
        <p>Conception probability is highest during the fertile window, peaking 1-2 days before ovulation.</p>
        
        <div class="timeline-visual">
          <div class="timeline-item">
            <div class="dot"></div>
            <div class="label">Period</div>
          </div>
          <div class="timeline-item">
            <div class="dot"></div>
            <div class="label">Fertile Window</div>
          </div>
          <div class="timeline-item active">
            <div class="dot active"></div>
            <div class="label">Ovulation</div>
          </div>
          <div class="timeline-item">
            <div class="dot"></div>
            <div class="label">Next Period</div>
          </div>
        </div>
        
        <h3><i class="fas fa-exclamation-triangle"></i> Important Notes</h3>
        <p>Keep in mind that:</p>
        <ul>
          <li>Ovulation prediction is an <span class="highlight">estimate</span> and may vary</li>
          <li>Cycle irregularities can affect accuracy</li>
          <li>Track basal body temperature for more precise results</li>
          <li>Consult a fertility specialist if trying to conceive for over 6 months</li>
        </ul>
        
        <div class="health-tips">
          <h4><i class="fas fa-lightbulb"></i> Fertility Boosting Tips</h4>
          <p>To increase your chances of conception:</p>
          <ul>
            <li>Have intercourse every other day during your fertile window</li>
            <li>Maintain a healthy weight and balanced diet</li>
            <li>Limit caffeine and avoid alcohol</li>
            <li>Manage stress through relaxation techniques</li>
            <li>Consider ovulation predictor kits for accuracy</li>
          </ul>
        </div>
      </div>
    </div>
  </main>

  <footer>
    <div class="footer-container">
      <div class="footer-column">
        <h3>Calculator2U</h3>
        <p>Your trusted source for health calculators and wellness tools. Providing accurate, reliable health metrics since 2025.</p>
      </div>
      <div class="footer-column">
        <h3>Health Calculators</h3>
        <ul class="footer-links">
          <li><a href="/en/health/bmi-calculator.html">BMI Calculator</a></li>
          <li><a href="/en/health/bmr-calculator.html">BMR Calculator</a></li>
          <li><a href="/en/health/body-fat-calculator.html">Body Fat Calculator</a></li>
          <li><a href="/en/health/ovulation-calculator.html">Ovulation Calculator</a></li>
        </ul>
      </div>
      <div class="footer-column">
        <h3>Legal Information</h3>
        <ul class="footer-links">
          <li><a href="/privacy-en.html">Privacy Policy</a></li>
          <li><a href="/terms-en.html">Terms of Service</a></li>
        </ul>
      </div>
    </div>
    <div class="copyright">
      <p>&copy; 2025 Calculator2U. All rights reserved. | 
        <a href="/privacy-en.html">Privacy Policy</a> | 
        <a href="/terms-en.html">Terms of Service</a>
      </p>
      <p><small>Note: These calculators provide estimates only. Consult a healthcare professional for medical advice.</small></p>
    </div>
  </footer>

  <script>
    (function(){
      // Hamburger menu functionality
      const hamburger = document.getElementById('hamburger');
      const navLinks = document.getElementById('navLinks');
      
      hamburger.addEventListener('click', () => {
        navLinks.classList.toggle('active');
        hamburger.classList.toggle('active');
      });
      
      // Close menu when clicking outside
      document.addEventListener('click', (event) => {
        const isClickInsideNav = navLinks.contains(event.target) || hamburger.contains(event.target);
        if (!isClickInsideNav && navLinks.classList.contains('active')) {
          navLinks.classList.remove('active');
          hamburger.classList.remove('active');
        }
      });

      // Language selector functionality
      const langSelect = document.getElementById('lang-select');
      
      langSelect.addEventListener('change', function() {
        const selectedLang = this.value;
        let targetUrl = '';
        
        // Get current path and replace language segment
        const currentPath = window.location.pathname;
        const pathSegments = currentPath.split('/');
        
        // Determine the base path for the health section
        let healthPath = '';
        if (currentPath.includes('/health/')) {
          const healthIndex = pathSegments.findIndex(segment => segment === 'health');
          if (healthIndex !== -1) {
            healthPath = pathSegments.slice(healthIndex).join('/').replace('health', '');
          }
        }
        
        // Build new URL based on selected language
        switch(selectedLang) {
          case 'zh':
            targetUrl = healthPath ? `/zh/health${healthPath}` : '/zh/health/ovulation-calculator.html';
            break;
          case 'es':
            targetUrl = healthPath ? `/es/health${healthPath}` : '/es/health/ovulation-calculator.html';
            break;
          case 'de':
            targetUrl = healthPath ? `/de/health${healthPath}` : '/de/health/ovulation-calculator.html';
            break;
          case 'fr':
            targetUrl = healthPath ? `/fr/health${healthPath}` : '/fr/health/ovulation-calculator.html';
            break;
          default: // English
            targetUrl = healthPath ? `/en/health${healthPath}` : '/en/health/ovulation-calculator.html';
        }
        
        window.location.href = targetUrl;
      });
      
      // Set current language based on URL
      const pathSegments = window.location.pathname.split('/');
      if (pathSegments.length > 1) {
        const lang = pathSegments[1];
        if (['en', 'zh', 'es', 'de', 'fr'].includes(lang)) {
          langSelect.value = lang;
        }
      }
      
      // Ovulation Calculator Functionality
      const lastPeriodInput = document.getElementById('last-period');
      const cycleLengthInput = document.getElementById('cycle-length');
      const lutealLengthInput = document.getElementById('luteal-length');
      const periodLengthInput = document.getElementById('period-length');
      const calculateBtn = document.getElementById('calculate-btn');
      const resultContainer = document.getElementById('result-container');
      const nextPeriodElement = document.getElementById('next-period');
      const ovulationDateElement = document.getElementById('ovulation-date');
      const fertileWindowElement = document.getElementById('fertile-window');
      const conceptionProbabilityElement = document.getElementById('conception-probability');
      const fertilityStatusElement = document.getElementById('fertility-status');
      const ovulationDaysElement = document.getElementById('ovulation-days');
      const cycleDayElement = document.getElementById('cycle-day');
      const fertilityProgressElement = document.getElementById('fertility-progress');
      const fertilityDescriptionElement = document.getElementById('fertility-description');
      const lmpErrorElement = document.getElementById('lmp-error');
      const calendarElement = document.getElementById('fertility-calendar');
      const historyContainer = document.getElementById('history-container');
      const historyList = document.getElementById('history-list');
      const clearHistoryBtn = document.getElementById('clear-history');
      
      // Cycle history array
      let cycleHistory = JSON.parse(localStorage.getItem('cycleHistory')) || [];
      
      // Helper function to format dates
      function formatDate(date) {
        const year = date.getFullYear();
        const month = String(date.getMonth() + 1).padStart(2, '0');
        const day = String(date.getDate()).padStart(2, '0');
        return `${day}/${month}/${year}`;
      }
      
      // Format date for storage
      function formatDateForStorage(date) {
        return date.toISOString().split('T')[0];
      }
      
      // Calculate days between two dates
      function daysBetween(date1, date2) {
        const oneDay = 24 * 60 * 60 * 1000;
        return Math.round(Math.abs((date1 - date2) / oneDay));
      }
      
      // Generate calendar for the current cycle
      function generateFertilityCalendar(startDate, cycleLength, ovulationDate, periodLength) {
        const today = new Date();
        today.setHours(0, 0, 0, 0);
        
        const endDate = new Date(startDate);
        endDate.setDate(endDate.getDate() + cycleLength - 1);
        
        // Clear existing calendar
        const tbody = calendarElement.querySelector('tbody');
        tbody.innerHTML = '';
        
        // Find start of calendar (Sunday before startDate)
        let calendarStart = new Date(startDate);
        calendarStart.setDate(calendarStart.getDate() - calendarStart.getDay());
        
        // Find end of calendar (Saturday after endDate)
        let calendarEnd = new Date(endDate);
        calendarEnd.setDate(calendarEnd.getDate() + (6 - calendarEnd.getDay()));
        
        let datePointer = new Date(calendarStart);
        let calendarHTML = '';
        let rowHTML = '';
        
        while (datePointer <= calendarEnd) {
          // Start new row on Sundays
          if (datePointer.getDay() === 0) {
            if (rowHTML) {
              calendarHTML += `<tr>${rowHTML}</tr>`;
            }
            rowHTML = '';
          }
          
          const currentDate = new Date(datePointer);
          const dayNumber = currentDate.getDate();
          const isToday = currentDate.toDateString() === today.toDateString();
          const isOvulationDay = ovulationDate && currentDate.toDateString() === ovulationDate.toDateString();
          const isInFertileWindow = ovulationDate && 
            daysBetween(currentDate, ovulationDate) <= 5 && 
            daysBetween(currentDate, ovulationDate) >= -5;
          
          // Determine if period day
          const periodStart = new Date(startDate);
          const periodEnd = new Date(startDate);
          periodEnd.setDate(periodEnd.getDate() + periodLength - 1);
          const isPeriodDay = currentDate >= periodStart && currentDate <= periodEnd;
          
          // Determine fertility status
          let fertilityClass = '';
          let fertilityStatus = '';
          
          if (isPeriodDay) {
            fertilityClass = 'period-day';
            fertilityStatus = 'PERIOD';
          } else if (isOvulationDay) {
            fertilityClass = 'ovulation-day';
            fertilityStatus = 'PEAK';
          } else if (isInFertileWindow) {
            const daysToOvulation = daysBetween(currentDate, ovulationDate);
            if (daysToOvulation >= -2 && daysToOvulation <= 0) {
              fertilityClass = 'fertile-day';
              fertilityStatus = 'HIGH';
            } else if (daysToOvulation >= -5 && daysToOvulation <= -3) {
              fertilityClass = 'fertile-day';
              fertilityStatus = 'MEDIUM';
            } else {
              fertilityStatus = 'LOW';
            }
          } else {
            fertilityStatus = 'LOW';
          }
          
          // Add cell to row
          rowHTML += `
            <td class="${isToday ? 'today ' : ''}${fertilityClass || ''}">
              <div class="calendar-day">${dayNumber}</div>
              <div class="fertility-status ${fertilityStatus.toLowerCase()}-fertility">${fertilityStatus}</div>
            </td>
          `;
          
          // Move to next day
          datePointer.setDate(datePointer.getDate() + 1);
        }
        
        // Add last row
        if (rowHTML) {
          calendarHTML += `<tr>${rowHTML}</tr>`;
        }
        
        tbody.innerHTML = calendarHTML;
      }
      
      // Save cycle to history
      function saveToHistory(lastPeriod, cycleLength, lutealLength) {
        const cycleData = {
          lastPeriod: formatDateForStorage(lastPeriod),
          cycleLength,
          lutealLength,
          calculatedAt: new Date().toISOString()
        };
        
        // Add to beginning of history
        cycleHistory.unshift(cycleData);
        
        // Limit to 5 entries
        if (cycleHistory.length > 5) {
          cycleHistory = cycleHistory.slice(0, 5);
        }
        
        // Save to localStorage
        localStorage.setItem('cycleHistory', JSON.stringify(cycleHistory));
        
        // Update history display
        updateHistoryDisplay();
      }
      
      // Update history display
      function updateHistoryDisplay() {
        if (cycleHistory.length === 0) {
          historyContainer.style.display = 'none';
          return;
        }
        
        historyContainer.style.display = 'block';
        historyList.innerHTML = '';
        
        cycleHistory.forEach(cycle => {
          const lastPeriod = new Date(cycle.lastPeriod);
          const nextPeriod = new Date(lastPeriod);
          nextPeriod.setDate(nextPeriod.getDate() + cycle.cycleLength);
          
          const historyItem = document.createElement('div');
          historyItem.className = 'history-item';
          historyItem.innerHTML = `
            <div class="history-dates">
              <div>${formatDate(lastPeriod)} → ${formatDate(nextPeriod)}</div>
              <div class="history-duration">${cycle.cycleLength}-day cycle</div>
            </div>
            <button class="history-btn load-history">Load</button>
          `;
          
          historyList.appendChild(historyItem);
        });
        
        // Add event listeners to load buttons
        document.querySelectorAll('.load-history').forEach((button, index) => {
          button.addEventListener('click', () => {
            loadHistoryItem(index);
          });
        });
      }
      
      // Load history item into calculator
      function loadHistoryItem(index) {
        const cycle = cycleHistory[index];
        if (!cycle) return;
        
        lastPeriodInput.value = cycle.lastPeriod;
        cycleLengthInput.value = cycle.cycleLength;
        lutealLengthInput.value = cycle.lutealLength;
        
        calculateOvulation();
      }
      
      // Clear history
      clearHistoryBtn.addEventListener('click', () => {
        cycleHistory = [];
        localStorage.removeItem('cycleHistory');
        historyContainer.style.display = 'none';
      });
      
      // Calculate Ovulation Details function
      function calculateOvulation() {
        const lastPeriodStr = lastPeriodInput.value;
        
        // Validate last period date
        if (!lastPeriodStr) {
          lastPeriodInput.parentElement.classList.add('error');
          lmpErrorElement.style.display = 'block';
          return;
        } else {
          lastPeriodInput.parentElement.classList.remove('error');
          lmpErrorElement.style.display = 'none';
        }
        
        const lastPeriod = new Date(lastPeriodStr);
        const today = new Date();
        today.setHours(0, 0, 0, 0);
        
        // Get cycle length or use default 28 days
        const cycleLength = parseInt(cycleLengthInput.value) || 28;
        const lutealLength = parseInt(lutealLengthInput.value) || 14;
        const periodLength = parseInt(periodLengthInput.value) || 5;
        
        // Save to history
        saveToHistory(lastPeriod, cycleLength, lutealLength);
        
        // 1. Calculate next period date
        const nextPeriod = new Date(lastPeriod);
        nextPeriod.setDate(nextPeriod.getDate() + cycleLength);
        
        // 2. Calculate ovulation date (cycle length - luteal phase)
        const ovulationDate = new Date(lastPeriod);
        ovulationDate.setDate(ovulationDate.getDate() + (cycleLength - lutealLength));
        
        // 3. Calculate fertile window (5 days before ovulation to 1 day after)
        const fertileStart = new Date(ovulationDate);
        fertileStart.setDate(fertileStart.getDate() - 5);
        
        const fertileEnd = new Date(ovulationDate);
        fertileEnd.setDate(fertileEnd.getDate() + 1);
        
        // 4. Calculate current day of cycle
        const daysSinceLMP = daysBetween(today, lastPeriod);
        const cycleDay = daysSinceLMP + 1; // Day 1 is first day of period
        
        // 5. Calculate days until ovulation
        const daysUntilOvulation = daysBetween(today, ovulationDate);
        
        // 6. Determine conception probability and fertility status
        let conceptionProbability = 0;
        let fertilityStatus = "Low";
        
        if (daysUntilOvulation >= -5 && daysUntilOvulation <= 1) {
          if (daysUntilOvulation === 0) {
            conceptionProbability = 33;
            fertilityStatus = "Peak"; // Only 1 day of peak fertility
          } else if (daysUntilOvulation >= -2 && daysUntilOvulation <= -1) {
            conceptionProbability = 25;
            fertilityStatus = "High";
          } else if (daysUntilOvulation >= -5 && daysUntilOvulation <= -3) {
            conceptionProbability = 15;
            fertilityStatus = "Medium";
          } else if (daysUntilOvulation === 1) {
            conceptionProbability = 10;
            fertilityStatus = "Medium";
          }
        } else {
          conceptionProbability = 0;
          fertilityStatus = "Low";
        }
        
        // Calculate fertility progress (based on cycle day)
        const fertilityProgress = Math.min(100, (cycleDay / cycleLength) * 100);
        
        // Update result values
        nextPeriodElement.textContent = formatDate(nextPeriod);
        ovulationDateElement.textContent = formatDate(ovulationDate);
        fertileWindowElement.textContent = `${formatDate(fertileStart)} to ${formatDate(fertileEnd)}`;
        conceptionProbabilityElement.textContent = `${conceptionProbability}%`;
        fertilityStatusElement.textContent = fertilityStatus;
        ovulationDaysElement.textContent = daysUntilOvulation > 0 ? `In ${daysUntilOvulation} days` : 
          daysUntilOvulation === 0 ? "Today" : `${Math.abs(daysUntilOvulation)} days ago`;
        cycleDayElement.textContent = `Day ${cycleDay} of your ${cycleLength}-day cycle`;
        
        // Update fertility progress bar
        fertilityProgressElement.style.width = `${fertilityProgress}%`;
        
        // Update fertility description
        if (daysUntilOvulation > 5) {
          fertilityDescriptionElement.textContent = "You are not in your fertile window yet. Plan ahead for your upcoming fertile days.";
        } else if (daysUntilOvulation >= 0) {
          fertilityDescriptionElement.textContent = "You are in your fertile window. This is the best time to try to conceive.";
        } else {
          fertilityDescriptionElement.textContent = "Your fertile window has passed for this cycle. Track your next cycle for conception opportunities.";
        }
        
        // Generate fertility calendar
        generateFertilityCalendar(lastPeriod, cycleLength, ovulationDate, periodLength);
        
        // Show result container
        resultContainer.style.display = 'block';
        
        // Update history display
        updateHistoryDisplay();
        
        // Scroll to results
        resultContainer.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
      }
      
      // Add event listener to calculate button
      calculateBtn.addEventListener('click', calculateOvulation);
      
      // Also allow pressing Enter in input fields
      lastPeriodInput.addEventListener('keypress', (e) => {
        if (e.key === 'Enter') calculateOvulation();
      });
      
      cycleLengthInput.addEventListener('keypress', (e) => {
        if (e.key === 'Enter') calculateOvulation();
      });
      
      lutealLengthInput.addEventListener('keypress', (e) => {
        if (e.key === 'Enter') calculateOvulation();
      });
      
      periodLengthInput.addEventListener('keypress', (e) => {
        if (e.key === 'Enter') calculateOvulation();
      });
      
      // Initialize default selections
      const twoWeeksAgo = new Date();
      twoWeeksAgo.setDate(twoWeeksAgo.getDate() - 14);
      lastPeriodInput.valueAsDate = twoWeeksAgo;
      
      // Initialize calculator
      setTimeout(() => {
        calculateOvulation();
        updateHistoryDisplay();
      }, 500);
    })();
  </script>
</body>
</html>